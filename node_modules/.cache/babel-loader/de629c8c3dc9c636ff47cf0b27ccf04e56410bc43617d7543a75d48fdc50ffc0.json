{"ast":null,"code":"var _jsxFileName = \"/workspaces/ahbajaou.github.io/src/compoment/animation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { MotionPathPlugin } from \"gsap/MotionPathPlugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger, MotionPathPlugin);\nexport const BezierAnimation = () => {\n  _s();\n  useEffect(() => {\n    const path = document.querySelector(\".theline\");\n    const ball = document.querySelector(\".ball01\");\n    if (!path || !ball) return;\n    const length = path.getTotalLength();\n    const startPoint = path.getPointAtLength(0);\n\n    // Set ball's initial position to match the path start\n    gsap.set(ball, {\n      x: startPoint.x,\n      y: startPoint.y,\n      opacity: 0\n    });\n\n    // Animate the path drawing with some glowing effect\n    gsap.set(path, {\n      strokeDasharray: length,\n      strokeDashoffset: length\n    });\n    gsap.to(path, {\n      strokeDashoffset: 0,\n      stroke: \"#ffcc00\",\n      // Highlighting effect\n      strokeWidth: 3,\n      filter: \"drop-shadow(0px 0px 5px #ffcc00)\",\n      ease: \"none\",\n      duration: 2,\n      // Faster drawing animation\n      scrollTrigger: {\n        trigger: path,\n        start: \"top bottom\",\n        end: \"bottom top\",\n        scrub: 2\n      }\n    });\n    gsap.to(ball, {\n      motionPath: {\n        path: path,\n        align: path,\n        alignOrigin: [0.5, 0.5],\n        autoRotate: true // Ball rotates along path\n      },\n      ease: \"none\",\n      scrollTrigger: {\n        trigger: path,\n        start: \"top top\",\n        end: \"bottom bottom\",\n        scrub: 2\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"371\",\n      height: \"3161\",\n      viewBox: \"0 0 371 3161\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        className: \"theline\",\n        d: \"M170 2L153.5 73M170 2H159M170 2H181M153.5 73H165M153.5 73L142.5 74M165 73H176.5L191.5 2H181M165 73L180.5 2H181M159 2H148L131.5 69.5H121.5M159 2L142.5 73L131.5 70.5M139 2L121.5 69.5M139 2L147.5 1.5M139 2H131.5L111.5 69.5H121.5M134.5 73V80C134.5 80 139.071 80 142 80M150.5 74L149.5 80C149.5 80 144.929 80 142 80M142 80C141.61 81.7574 141 84.5 141 84.5L140 85.5C140 85.5 137.943 86.0906 137 87C134.103 89.7947 146.809 86.9864 146.5 91C146.191 95.0136 134.915 89.8 136.5 93.5C137.209 95.1547 140 96.5 140 96.5C140 96.5 145.224 96.5985 146.5 99C148.389 102.555 136.5 97.4746 136.5 101.5C136.5 105.525 145.994 100.007 146.5 104C147.016 108.073 136.245 104.465 137 108.5C137.706 112.271 147.947 107.447 146.5 111C145.577 113.266 140.568 111.592 141 114C141.449 116.498 145.476 112.468 147.5 114C150.653 116.386 136.293 116.618 139 119.5C141.006 121.635 144.768 117.138 146.5 119.5C148.648 122.429 140.119 121.545 139 125C137.12 130.806 159.382 125.438 154.5 127C149.619 128.562 146.882 129.438 142 131C137.119 132.562 141 137 141 137C141 137 134.498 138.696 131.5 141.5C123.502 148.982 148.908 142.747 159 147C189.682 159.929 101.013 145.97 76.5002 168.5C37.4904 204.354 217.817 129.394 211.5 182C205.39 232.887 46.4172 162.637 81.5002 200C108.247 228.485 219.172 208.907 180.5 214.5C166.767 216.486 145 216 145 216C145 216 162.91 215.541 168 223.5C175.069 234.552 136.22 212.994 134.5 226C132.748 239.25 172.97 220.593 168 233C164.386 242.021 150.12 234.24 145 242.5C136.247 256.622 197.88 258.614 182 263.5C173.365 266.157 160.011 252.022 159 261C158.071 269.255 181.318 264.122 177.5 271.5C174.56 277.18 161.936 268.619 161.5 275C161.089 281.017 170.027 279.089 175 282.5C211.348 307.431 102.558 279.574 63.5002 300C-10.203 338.545 292.88 254.616 273.5 335.5C254.868 413.266 120.24 284.606 69.0002 346C9.26239 417.577 398.214 380.25 305 382C276.09 382.543 208.922 360.827 231 379.5C244.343 390.785 284.967 380.314 273.5 393.5C264.881 403.411 247.266 385.557 240 396.5C231.083 409.931 278.944 392.388 279.5 408.5C280.088 425.518 246.962 398.469 236 411.5C221.597 428.622 274.16 415.712 289.5 432C315.204 459.292 188.433 394.854 193.5 432C198.206 466.497 249.093 438.542 279.5 455.5C364.757 503.046 82.2574 426.036 36.0002 512C-24.335 624.126 353.686 477.777 348.5 605C343.188 735.332 62.0729 509.157 15.5002 631C-35.8926 765.453 309.77 650.368 348.5 789C395.463 957.098 12.9135 898.246 3.00021 1072.5C-7.41529 1255.58 357.343 1207.34 348.5 1390.5C340.024 1566.08 21.8461 1504.23 3.00021 1679C-18.2425 1875.99 417.663 1844.77 364 2035.5C320.375 2190.55 13.2946 2074.25 3.00021 2235C-7.47802 2398.62 357.838 2309.81 348.5 2473.5C339.501 2631.24 11.4245 2526.23 3.00021 2684C-5.90158 2850.71 409.738 2752.44 364 2913C324.67 3051.07 2.1818 2887.06 15.5002 3030C27.5549 3159.38 322 3159.5 322 3159.5\",\n        stroke: \"#fff\",\n        \"stroke-width\": \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"ball01\",\n        cx: \"50\",\n        cy: \"700\",\n        r: \"10\",\n        fill: \"#024970\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(BezierAnimation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BezierAnimation;\n{/* <svg width=\"371\" height=\"3161\" viewBox=\"0 0 371 3161\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n <path  className=\"theline\" d=\"M170 2L153.5 73M170 2H159M170 2H181M153.5 73H165M153.5 73L142.5 74M165 73H176.5L191.5 2H181M165 73L180.5 2H181M159 2H148L131.5 69.5H121.5M159 2L142.5 73L131.5 70.5M139 2L121.5 69.5M139 2L147.5 1.5M139 2H131.5L111.5 69.5H121.5M134.5 73V80C134.5 80 139.071 80 142 80M150.5 74L149.5 80C149.5 80 144.929 80 142 80M142 80C141.61 81.7574 141 84.5 141 84.5L140 85.5C140 85.5 137.943 86.0906 137 87C134.103 89.7947 146.809 86.9864 146.5 91C146.191 95.0136 134.915 89.8 136.5 93.5C137.209 95.1547 140 96.5 140 96.5C140 96.5 145.224 96.5985 146.5 99C148.389 102.555 136.5 97.4746 136.5 101.5C136.5 105.525 145.994 100.007 146.5 104C147.016 108.073 136.245 104.465 137 108.5C137.706 112.271 147.947 107.447 146.5 111C145.577 113.266 140.568 111.592 141 114C141.449 116.498 145.476 112.468 147.5 114C150.653 116.386 136.293 116.618 139 119.5C141.006 121.635 144.768 117.138 146.5 119.5C148.648 122.429 140.119 121.545 139 125C137.12 130.806 159.382 125.438 154.5 127C149.619 128.562 146.882 129.438 142 131C137.119 132.562 141 137 141 137C141 137 134.498 138.696 131.5 141.5C123.502 148.982 148.908 142.747 159 147C189.682 159.929 101.013 145.97 76.5002 168.5C37.4904 204.354 217.817 129.394 211.5 182C205.39 232.887 46.4172 162.637 81.5002 200C108.247 228.485 219.172 208.907 180.5 214.5C166.767 216.486 145 216 145 216C145 216 162.91 215.541 168 223.5C175.069 234.552 136.22 212.994 134.5 226C132.748 239.25 172.97 220.593 168 233C164.386 242.021 150.12 234.24 145 242.5C136.247 256.622 197.88 258.614 182 263.5C173.365 266.157 160.011 252.022 159 261C158.071 269.255 181.318 264.122 177.5 271.5C174.56 277.18 161.936 268.619 161.5 275C161.089 281.017 170.027 279.089 175 282.5C211.348 307.431 102.558 279.574 63.5002 300C-10.203 338.545 292.88 254.616 273.5 335.5C254.868 413.266 120.24 284.606 69.0002 346C9.26239 417.577 398.214 380.25 305 382C276.09 382.543 208.922 360.827 231 379.5C244.343 390.785 284.967 380.314 273.5 393.5C264.881 403.411 247.266 385.557 240 396.5C231.083 409.931 278.944 392.388 279.5 408.5C280.088 425.518 246.962 398.469 236 411.5C221.597 428.622 274.16 415.712 289.5 432C315.204 459.292 188.433 394.854 193.5 432C198.206 466.497 249.093 438.542 279.5 455.5C364.757 503.046 82.2574 426.036 36.0002 512C-24.335 624.126 353.686 477.777 348.5 605C343.188 735.332 62.0729 509.157 15.5002 631C-35.8926 765.453 309.77 650.368 348.5 789C395.463 957.098 12.9135 898.246 3.00021 1072.5C-7.41529 1255.58 357.343 1207.34 348.5 1390.5C340.024 1566.08 21.8461 1504.23 3.00021 1679C-18.2425 1875.99 417.663 1844.77 364 2035.5C320.375 2190.55 13.2946 2074.25 3.00021 2235C-7.47802 2398.62 357.838 2309.81 348.5 2473.5C339.501 2631.24 11.4245 2526.23 3.00021 2684C-5.90158 2850.71 409.738 2752.44 364 2913C324.67 3051.07 2.1818 2887.06 15.5002 3030C27.5549 3159.38 322 3159.5 322 3159.5\" stroke=\"#024970\" stroke-width=\"3\"/>\n </svg> */}\n{/* <svg width=\"388\" height=\"989\" viewBox=\"0 0 388 989\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n <path className=\"theline\" d=\"M198 0.5L193 131C193 131 184.983 134.27 186 138C186.829 141.038 192.827 138.856 193 142C193.138 144.497 189.177 144.506 189 147C188.785 150.042 194.682 150.027 194 153C193.355 155.81 188.701 153.879 187.5 156.5C185.709 160.41 196.33 161.108 194.5 165C193.417 167.304 189.768 166.073 189 168.5C187.856 172.115 196.612 170.229 197 174C197.484 178.694 179.361 176.071 186 179C192.639 181.929 196.361 183.571 203 186.5C209.639 189.429 185.465 183.836 183 191.5C180.273 199.978 207.032 198.949 201 205.5C197.368 209.444 188.326 202.702 187.5 208C186.651 213.447 197.586 208.821 200.5 213.5C205.072 220.84 181.467 207.878 178.5 216C175.515 224.171 198.334 224.457 194 232C190.624 237.877 168.604 233.157 177 235.5C185.396 237.843 190.104 239.157 198.5 241.5C206.896 243.843 76.7626 204.868 31.5001 252C-5.72296 290.761 0.445235 334.225 7.50012 387.5C12.8465 427.873 22.5286 450.71 44.5001 485C108.861 585.447 341.136 472.134 331 591C321.464 702.833 120.689 594.448 61.0001 689.5C-35.418 843.043 417 987.5 417 987.5\" stroke=\"#024970\" stroke-width=\"3\"/>\n </svg> */}\n\n// import React, { useEffect } from \"react\";\n// import gsap from \"gsap\";\n// import { ScrollTrigger } from \"gsap/ScrollTrigger\";\n// import { MotionPathPlugin } from \"gsap/MotionPathPlugin\";\n\n// gsap.registerPlugin(ScrollTrigger,MotionPathPlugin );\n\n// export const BezierAnimation = () => {\n//   useEffect(() => {\n//     const path = document.querySelector(\".theline\");\n//     const ball = document.querySelector(\".ball01\");\n\n//     if (!path || !ball ) return;\n\n//     const length = path.getTotalLength();\n\n//     gsap.set(path, {\n//       strokeDasharray: length,\n//       strokeDashoffset: length,\n//     });\n\n//     gsap.to(path, {\n//       strokeDashoffset: 0,\n//       ease: \"none\",\n//       scrollTrigger: {\n//         trigger: path,\n//         start: \"top bottom\", // Start when the top of the path reaches the bottom of the viewport\n//         end: \"bottom top\",   // End when the bottom of the path reaches the top of the viewport\n//         scrub: 2,            // Smooth scroll behavior\n//         markers: true,       // For debugging (remove in production)\n//       },\n//     });\n//     gsap.to(ball, {\n//         motionPath: {\n//           path: path,\n//           align: path,\n//           alignOrigin: [0.5, 0.5],\n//           autoRotate: true, // Ball rotates along path\n//         },\n//         ease: \"none\",\n//         scrollTrigger: {\n//           trigger: path,\n//           start: \"top top\",\n//           end: \"bottom bottom\",\n//           scrub: 2,\n//         },\n//       });\n//     //   gsap.to(\".ball01 , .text01\", {}, 0.84)\n\n//   }, []);\n\n//   return (\n//     <div className=\"flex items-center justify-center\">\n//       <svg  \n//            width=\"397\" height=\"3133\" viewBox=\"0 0 397 3133\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n//       >\n//         {/* <path className=\"theline\"\n//         d=\"M -5,0\n//         Q 450 230 300 450\n//         T 130 750\n//         Q 100 850 300 1000\n//         T 150 1200\n//         \"\n//         fill=\"none\" stroke=\"#024970\" strokeWidth={5}\n//         >\n//         </path> */}\n//         {/* <path className=\"theline\" d=\"M655 1C565.57 124.015 518.159 195.016 426 316C268.231 523.117 -18.9396 570.982 1.99992 830.5C24.696\n//          1111.79 481.882 996.229 583.5 1259.5C693.581 1544.7 234.096 1753.36 388 \n//          2017.5C565.055 2321.37 1059.51 2378.72 1284 2108C1639.83 1678.88 \n//          -299.063 1677.21 49.4999 2823.5C127.523 3080.09 655 3147.5 655 3147.5\" \n//          fill=\"none\" stroke=\"#024970\" strokeWidth={5}\n//          /> */}\n//         <path className=\"theline\" d=\"M117.154 2C137.156 2.02282 254.073 266.632 156.354 245.232C58.6352 223.832 208.456 -71.7949 226.32 96.1856C244.183 264.166 295.037 126.765 305.465 268.05C321.333 483.027 136.484 199.119 151.392 413.698C158.686 518.679 242.664 518.735 238.725 624.402C234.152 747.076 130.22 684.959 104.004 796.751C55.885 1001.95 366.245 923.337 340.448 1143.39C320.047 1317.42 144.024 1199.05 139.731 1377.4C136.626 1506.42 74.9092 1946.23 235.251 1650.25C395.594 1354.27 528.506 1973.96 149.407 2154.67C-229.692 2335.39 238.465 2118.13 269.49 2188.17C316.614 2294.57 164.037 2314.06 141.716 2447.91C104.873 2668.84 355.119 2787.4 284.128 2973.7C257.864 3042.62 161.894 3030.94 190.593 3096.04C205.845 3130.64 247.657 3131 247.657 3131\" \n//         fill=\"none\" stroke=\"#024970\" strokeWidth={5} />\n\n//         <circle className=\"ball01\" fill=\"#024970\" r=\"20\" cx=\"50\" cy=\"100\" ></circle>\n\n//       </svg>\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"BezierAnimation\");","map":{"version":3,"names":["React","useEffect","gsap","ScrollTrigger","MotionPathPlugin","jsxDEV","_jsxDEV","registerPlugin","BezierAnimation","_s","path","document","querySelector","ball","length","getTotalLength","startPoint","getPointAtLength","set","x","y","opacity","strokeDasharray","strokeDashoffset","to","stroke","strokeWidth","filter","ease","duration","scrollTrigger","trigger","start","end","scrub","motionPath","align","alignOrigin","autoRotate","className","children","width","height","viewBox","fill","xmlns","d","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","_c","$RefreshReg$"],"sources":["/workspaces/ahbajaou.github.io/src/compoment/animation.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { MotionPathPlugin } from \"gsap/MotionPathPlugin\";\n\ngsap.registerPlugin(ScrollTrigger, MotionPathPlugin);\n\nexport const BezierAnimation = () => {\n  useEffect(() => {\n    const path = document.querySelector(\".theline\");\n    const ball = document.querySelector(\".ball01\");\n\n    if (!path || !ball) return;\n\n    const length = path.getTotalLength();\n    const startPoint = path.getPointAtLength(0);\n\n    // Set ball's initial position to match the path start\n    gsap.set(ball, { x: startPoint.x, y: startPoint.y, opacity: 0 });\n\n    // Animate the path drawing with some glowing effect\n    gsap.set(path, { strokeDasharray: length, strokeDashoffset: length });\n\n    gsap.to(path, {\n      strokeDashoffset: 0,\n      stroke: \"#ffcc00\", // Highlighting effect\n      strokeWidth: 3,\n      filter: \"drop-shadow(0px 0px 5px #ffcc00)\",\n      ease: \"none\",\n      duration: 2, // Faster drawing animation\n      scrollTrigger: {\n        trigger: path,\n        start: \"top bottom\",\n        end: \"bottom top\",\n        scrub: 2,\n      },\n    });\n    gsap.to(ball, {\n        motionPath: {\n          path: path,\n          align: path,\n          alignOrigin: [0.5, 0.5],\n          autoRotate: true, // Ball rotates along path\n        },\n        ease: \"none\",\n        scrollTrigger: {\n          trigger: path,\n          start: \"top top\",\n          end: \"bottom bottom\",\n          scrub: 2,\n        },\n      });\n  }, []);\n\n  return (\n    <div className=\"flex items-center justify-center\">\n      <svg width=\"371\" height=\"3161\" viewBox=\"0 0 371 3161\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      {/* <path className=\"theline\" d=\"M19.7105 2C19.7105 2 318.897 39.5073 259.306 129.518C246.951 148.181 227.588 148.751 218.893 169.524C202.702 208.205 225.323 245.98 259.306 269.039C290.176 289.984 322.651 294.35 353.605 273.539C391.08 248.345 391.565 201.764 378.142 157.523C371.493 135.608 362.619 125.033 348.313 107.515C263.445 3.58935 -85.9255 98.7401 19.7105 179.526C63.6916 213.16 152.499 225.032 152.499 225.032C152.499 225.032 243.371 228.202 218.893 238.534C208.503 242.92 188.531 231.562 190.507 243.035C192.006 251.739 209.359 245.695 209.27 254.537C209.172 264.301 186.356 251.775 186.177 261.538C185.996 271.357 209.27 269.039 209.27 269.039C201.943 273.335 197.834 275.744 190.507 280.04C183.179 284.337 219.481 283.758 218.893 297.043C218.234 311.901 188.669 286.209 182.328 299.543C175.016 314.917 229.581 308.481 218.893 321.546C210.617 331.663 186.177 321.546 186.177 321.546C186.177 321.546 211.698 328.486 209.27 340.049C206.926 351.215 192.899 345.405 182.328 348.55C148.764 358.535 116.243 340.564 95.2458 369.553C75.5827 396.7 64.7682 444.271 95.2458 456.566C125.476 468.76 172.569 420.529 152.499 394.057C142.154 380.412 124.763 389.932 112.566 378.054C90.3541 356.424 169.943 354.729 190.507 378.054C212.522 403.027 144.672 456.558 176.554 463.567C189.316 466.372 198.726 464.548 209.27 456.566C226.998 443.145 203.091 414.865 218.893 399.058C239.153 378.791 274.09 429.733 290.579 406.059C302.376 389.12 301.742 368.432 288.654 352.551C273.589 334.269 251.347 340.631 229.477 348.55C218.34 352.583 208.246 353.332 203.497 364.553C195.44 383.586 234.299 370.809 253.052 378.054C288.934 391.918 333.653 391.405 336.766 431.062C340.441 477.869 201.34 439.324 229.477 476.069C238.239 487.511 259.306 497.072 259.306 497.072C259.306 497.072 280.246 473.852 294.428 479.569C308.07 485.069 309.824 515.074 309.824 515.074C312.078 499.842 313.342 491.301 315.597 476.069C317.852 460.836 343.408 500.222 353.605 488.07C363.827 475.89 345.121 464.197 336.766 450.565C276.488 352.219 56.2754 515.074 56.2754 515.074L45.6908 558.581L68.7844 542.578L83.2179 558.581V527.576L176.554 569.082C176.554 569.082 136.643 584.55 131.811 607.588C123.987 644.886 226.476 661.218 224.666 623.09C223.53 599.162 163.35 573.264 186.177 576.583C193.299 577.619 197.103 579.663 203.497 583.084C223.821 593.958 217.965 624.509 240.062 630.591C265.415 637.569 298.783 624.842 299.239 597.586C299.754 566.796 254.294 583.235 224.666 583.084C147.86 582.692 85.5706 606.33 50.0209 677.098C-4.85239 786.332 271.951 587.755 353.605 677.098C441.965 773.778 49.7806 576.978 26.4462 708.102C22.0378 732.875 29.6125 747.635 26.4462 772.612C23.2429 797.88 25.0026 832.62 10.0882 835.621C-4.8262 838.621 42.4338 863.464 39.9174 886.628C38.0464 903.851 19.8136 906.681 16.3427 923.633C11.7653 945.991 39.0889 955.23 32.7007 979.642C26.3125 1004.05 22.7309 1017.74 16.3427 1042.15C9.95456 1066.56 36.0962 1051.92 39.9174 1064.15C45.2113 1081.1 18.1127 1087.54 20.6728 1105.16C22.6498 1118.76 39.6083 1120.41 39.9174 1134.16C40.2374 1148.41 27.1169 1152.1 20.6728 1164.67C-49.8526 1302.26 356.752 1156.38 378.142 1310.69C381.652 1336.01 378.142 1376.2 378.142 1376.2C378.142 1376.2 358.257 1404.07 362.746 1422.71C366.405 1437.89 387.292 1437.56 387.764 1453.21C388.327 1471.85 357.311 1467.79 354.567 1486.21C351.309 1508.1 393.046 1509.77 387.764 1531.22C384.34 1545.13 366.506 1543.41 362.746 1557.23C357.299 1577.25 396.337 1584.93 387.764 1603.73C382.629 1614.99 365.494 1610.1 362.746 1622.23C359.932 1634.66 373.074 1639.11 378.142 1650.74C436.92 1785.62 89.4828 1653.94 39.9174 1792.76C27.5795 1827.31 20.2431 1849.18 24.5217 1885.77C27.6907 1912.87 50.9848 1924.86 46.653 1951.78C43.6852 1970.23 26.7904 1975.23 24.5217 1993.79C21.5436 2018.14 46.7926 2027.75 46.653 2052.3C46.5156 2076.48 22.5891 2085.7 24.5217 2109.81C26.1266 2129.82 47.0012 2135.73 46.653 2155.81C46.3169 2175.2 24.0734 2180.43 24.5217 2199.82C25.1602 2227.43 79.6523 2223.19 72.6333 2249.83C66.9205 2271.51 41.6631 2264.62 24.5217 2278.33C-91.1311 2370.81 386.441 2327.74 347.351 2473.86C313.043 2602.1 93.3308 2452.62 32.7007 2569.87C26.0894 2582.66 20.2063 2589.5 18.2672 2603.88C14.5742 2631.25 41.096 2641.58 45.2097 2668.89C51.751 2712.31 5.76133 2735.91 18.2672 2777.9C24.2041 2797.84 39.426 2803.43 45.2097 2823.41C57.0263 2864.23 -21.7894 2919.75 18.2672 2928.92C26.8912 2930.9 32.5179 2925.97 40.8797 2928.92C66.3232 2937.9 34.6077 2972.08 32.7007 2999.93C27.9882 3068.78 -21.8906 3153.95 40.8797 3176.46C90.8753 3194.39 211.493 3097.75 159.715 3108.95C127.538 3115.91 102.375 3115.34 81.7745 3141.95C55.1602 3176.35 62.7382 3215.52 81.7745 3254.97C120.951 3336.16 259.489 3316.5 305.012 3238.97C322.033 3209.98 343.291 3182.41 324.738 3154.46C302.253 3120.58 257.333 3148.2 224.666 3171.46C194.09 3193.23 173.408 3216.45 174.149 3254.97C175.337 3316.8 306.107 3388.7 309.824 3326.98C311.085 3306.04 308.354 3292.21 296.833 3274.97C269.492 3234.08 174.149 3274.97 174.149 3274.97L127.962 3297.98C127.962 3297.98 116.239 3314.53 114.009 3326.98C110.396 3347.16 119.256 3359.07 127.962 3377.49C148.509 3420.96 220.336 3456 220.336 3456\"   fill=\"none\" stroke=\"#024970`\" strokeWidth={2} /> */}\n      {/* <path className=\"theline\" d=\"M2 1L84.7623 225.166L108.818 261.193M136.549 302.724L108.818 261.193M108.818 261.193L91.5382 302.724L134.613 211.156L144.293 203.65L173.333 316.734L182.044 308.228L214.956 222.664L245.931 308.228H186.884L300.138 297.22H372.252V198.146H294.33L300.138 308.228L288.522 382.283H225.603L216.892 396.794L223.184 410.304H286.102L291.91 389.288L314.658 382.283L300.138 504.373L334.985 512.379L349.989 391.79L318.53 382.283L346.117 516.382L379.996 526.39L395 406.301L360.637 396.794L349.989 508.376L258.515 529.892L232.863 612.454L252.707 564.918L270.131 608.951L291.91 564.918L307.882 612.454L328.209 564.918L346.117 615.456V641.475L328.209 592.439L307.882 638.473L291.91 592.439L273.034 638.473L252.707 592.439L235.283 635.971L144.293 622.961L119.61 627.465L113.318 675H91.5382L95.4101 627.465L66.3707 620.46L61.0468 594.941L113.318 592.439H144.293V653.484\" stroke=\"#024970\" stroke-width=\"3\"/> */}\n      {/* <path className=\"theline\" d=\"M198 0.5L193 131C193 131 184.983 134.27 186 138C186.829 141.038 192.827 138.856 193 142C193.138 144.497 189.177 144.506 189 147C188.785 150.042 194.682 150.027 194 153C193.355 155.81 188.701 153.879 187.5 156.5C185.709 160.41 196.33 161.108 194.5 165C193.417 167.304 189.768 166.073 189 168.5C187.856 172.115 196.612 170.229 197 174C197.484 178.694 179.361 176.071 186 179C192.639 181.929 196.361 183.571 203 186.5C209.639 189.429 185.465 183.836 183 191.5C180.273 199.978 207.032 198.949 201 205.5C197.368 209.444 188.326 202.702 187.5 208C186.651 213.447 197.586 208.821 200.5 213.5C205.072 220.84 181.467 207.878 178.5 216C175.515 224.171 198.334 224.457 194 232C190.624 237.877 168.604 233.157 177 235.5C185.396 237.843 190.104 239.157 198.5 241.5C206.896 243.843 76.7626 204.868 31.5001 252C-5.72296 290.761 0.445235 334.225 7.50012 387.5C12.8465 427.873 22.5286 450.71 44.5001 485C108.861 585.447 341.136 472.134 331 591C321.464 702.833 120.689 594.448 61.0001 689.5C-35.418 843.043 417 987.5 417 987.5\" stroke=\"#fff\" stroke-width=\"3\"/> */}\n      <path  className=\"theline\" d=\"M170 2L153.5 73M170 2H159M170 2H181M153.5 73H165M153.5 73L142.5 74M165 73H176.5L191.5 2H181M165 73L180.5 2H181M159 2H148L131.5 69.5H121.5M159 2L142.5 73L131.5 70.5M139 2L121.5 69.5M139 2L147.5 1.5M139 2H131.5L111.5 69.5H121.5M134.5 73V80C134.5 80 139.071 80 142 80M150.5 74L149.5 80C149.5 80 144.929 80 142 80M142 80C141.61 81.7574 141 84.5 141 84.5L140 85.5C140 85.5 137.943 86.0906 137 87C134.103 89.7947 146.809 86.9864 146.5 91C146.191 95.0136 134.915 89.8 136.5 93.5C137.209 95.1547 140 96.5 140 96.5C140 96.5 145.224 96.5985 146.5 99C148.389 102.555 136.5 97.4746 136.5 101.5C136.5 105.525 145.994 100.007 146.5 104C147.016 108.073 136.245 104.465 137 108.5C137.706 112.271 147.947 107.447 146.5 111C145.577 113.266 140.568 111.592 141 114C141.449 116.498 145.476 112.468 147.5 114C150.653 116.386 136.293 116.618 139 119.5C141.006 121.635 144.768 117.138 146.5 119.5C148.648 122.429 140.119 121.545 139 125C137.12 130.806 159.382 125.438 154.5 127C149.619 128.562 146.882 129.438 142 131C137.119 132.562 141 137 141 137C141 137 134.498 138.696 131.5 141.5C123.502 148.982 148.908 142.747 159 147C189.682 159.929 101.013 145.97 76.5002 168.5C37.4904 204.354 217.817 129.394 211.5 182C205.39 232.887 46.4172 162.637 81.5002 200C108.247 228.485 219.172 208.907 180.5 214.5C166.767 216.486 145 216 145 216C145 216 162.91 215.541 168 223.5C175.069 234.552 136.22 212.994 134.5 226C132.748 239.25 172.97 220.593 168 233C164.386 242.021 150.12 234.24 145 242.5C136.247 256.622 197.88 258.614 182 263.5C173.365 266.157 160.011 252.022 159 261C158.071 269.255 181.318 264.122 177.5 271.5C174.56 277.18 161.936 268.619 161.5 275C161.089 281.017 170.027 279.089 175 282.5C211.348 307.431 102.558 279.574 63.5002 300C-10.203 338.545 292.88 254.616 273.5 335.5C254.868 413.266 120.24 284.606 69.0002 346C9.26239 417.577 398.214 380.25 305 382C276.09 382.543 208.922 360.827 231 379.5C244.343 390.785 284.967 380.314 273.5 393.5C264.881 403.411 247.266 385.557 240 396.5C231.083 409.931 278.944 392.388 279.5 408.5C280.088 425.518 246.962 398.469 236 411.5C221.597 428.622 274.16 415.712 289.5 432C315.204 459.292 188.433 394.854 193.5 432C198.206 466.497 249.093 438.542 279.5 455.5C364.757 503.046 82.2574 426.036 36.0002 512C-24.335 624.126 353.686 477.777 348.5 605C343.188 735.332 62.0729 509.157 15.5002 631C-35.8926 765.453 309.77 650.368 348.5 789C395.463 957.098 12.9135 898.246 3.00021 1072.5C-7.41529 1255.58 357.343 1207.34 348.5 1390.5C340.024 1566.08 21.8461 1504.23 3.00021 1679C-18.2425 1875.99 417.663 1844.77 364 2035.5C320.375 2190.55 13.2946 2074.25 3.00021 2235C-7.47802 2398.62 357.838 2309.81 348.5 2473.5C339.501 2631.24 11.4245 2526.23 3.00021 2684C-5.90158 2850.71 409.738 2752.44 364 2913C324.67 3051.07 2.1818 2887.06 15.5002 3030C27.5549 3159.38 322 3159.5 322 3159.5\" stroke=\"#fff\" stroke-width=\"3\"/>\n      <circle className=\"ball01\" cx=\"50\" cy=\"700\" r=\"10\" fill=\"#024970\" />\n      </svg>\n    </div>\n  );\n};\n\n\n{/* <svg width=\"371\" height=\"3161\" viewBox=\"0 0 371 3161\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path  className=\"theline\" d=\"M170 2L153.5 73M170 2H159M170 2H181M153.5 73H165M153.5 73L142.5 74M165 73H176.5L191.5 2H181M165 73L180.5 2H181M159 2H148L131.5 69.5H121.5M159 2L142.5 73L131.5 70.5M139 2L121.5 69.5M139 2L147.5 1.5M139 2H131.5L111.5 69.5H121.5M134.5 73V80C134.5 80 139.071 80 142 80M150.5 74L149.5 80C149.5 80 144.929 80 142 80M142 80C141.61 81.7574 141 84.5 141 84.5L140 85.5C140 85.5 137.943 86.0906 137 87C134.103 89.7947 146.809 86.9864 146.5 91C146.191 95.0136 134.915 89.8 136.5 93.5C137.209 95.1547 140 96.5 140 96.5C140 96.5 145.224 96.5985 146.5 99C148.389 102.555 136.5 97.4746 136.5 101.5C136.5 105.525 145.994 100.007 146.5 104C147.016 108.073 136.245 104.465 137 108.5C137.706 112.271 147.947 107.447 146.5 111C145.577 113.266 140.568 111.592 141 114C141.449 116.498 145.476 112.468 147.5 114C150.653 116.386 136.293 116.618 139 119.5C141.006 121.635 144.768 117.138 146.5 119.5C148.648 122.429 140.119 121.545 139 125C137.12 130.806 159.382 125.438 154.5 127C149.619 128.562 146.882 129.438 142 131C137.119 132.562 141 137 141 137C141 137 134.498 138.696 131.5 141.5C123.502 148.982 148.908 142.747 159 147C189.682 159.929 101.013 145.97 76.5002 168.5C37.4904 204.354 217.817 129.394 211.5 182C205.39 232.887 46.4172 162.637 81.5002 200C108.247 228.485 219.172 208.907 180.5 214.5C166.767 216.486 145 216 145 216C145 216 162.91 215.541 168 223.5C175.069 234.552 136.22 212.994 134.5 226C132.748 239.25 172.97 220.593 168 233C164.386 242.021 150.12 234.24 145 242.5C136.247 256.622 197.88 258.614 182 263.5C173.365 266.157 160.011 252.022 159 261C158.071 269.255 181.318 264.122 177.5 271.5C174.56 277.18 161.936 268.619 161.5 275C161.089 281.017 170.027 279.089 175 282.5C211.348 307.431 102.558 279.574 63.5002 300C-10.203 338.545 292.88 254.616 273.5 335.5C254.868 413.266 120.24 284.606 69.0002 346C9.26239 417.577 398.214 380.25 305 382C276.09 382.543 208.922 360.827 231 379.5C244.343 390.785 284.967 380.314 273.5 393.5C264.881 403.411 247.266 385.557 240 396.5C231.083 409.931 278.944 392.388 279.5 408.5C280.088 425.518 246.962 398.469 236 411.5C221.597 428.622 274.16 415.712 289.5 432C315.204 459.292 188.433 394.854 193.5 432C198.206 466.497 249.093 438.542 279.5 455.5C364.757 503.046 82.2574 426.036 36.0002 512C-24.335 624.126 353.686 477.777 348.5 605C343.188 735.332 62.0729 509.157 15.5002 631C-35.8926 765.453 309.77 650.368 348.5 789C395.463 957.098 12.9135 898.246 3.00021 1072.5C-7.41529 1255.58 357.343 1207.34 348.5 1390.5C340.024 1566.08 21.8461 1504.23 3.00021 1679C-18.2425 1875.99 417.663 1844.77 364 2035.5C320.375 2190.55 13.2946 2074.25 3.00021 2235C-7.47802 2398.62 357.838 2309.81 348.5 2473.5C339.501 2631.24 11.4245 2526.23 3.00021 2684C-5.90158 2850.71 409.738 2752.44 364 2913C324.67 3051.07 2.1818 2887.06 15.5002 3030C27.5549 3159.38 322 3159.5 322 3159.5\" stroke=\"#024970\" stroke-width=\"3\"/>\n</svg> */}\n\n{/* <svg width=\"388\" height=\"989\" viewBox=\"0 0 388 989\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path className=\"theline\" d=\"M198 0.5L193 131C193 131 184.983 134.27 186 138C186.829 141.038 192.827 138.856 193 142C193.138 144.497 189.177 144.506 189 147C188.785 150.042 194.682 150.027 194 153C193.355 155.81 188.701 153.879 187.5 156.5C185.709 160.41 196.33 161.108 194.5 165C193.417 167.304 189.768 166.073 189 168.5C187.856 172.115 196.612 170.229 197 174C197.484 178.694 179.361 176.071 186 179C192.639 181.929 196.361 183.571 203 186.5C209.639 189.429 185.465 183.836 183 191.5C180.273 199.978 207.032 198.949 201 205.5C197.368 209.444 188.326 202.702 187.5 208C186.651 213.447 197.586 208.821 200.5 213.5C205.072 220.84 181.467 207.878 178.5 216C175.515 224.171 198.334 224.457 194 232C190.624 237.877 168.604 233.157 177 235.5C185.396 237.843 190.104 239.157 198.5 241.5C206.896 243.843 76.7626 204.868 31.5001 252C-5.72296 290.761 0.445235 334.225 7.50012 387.5C12.8465 427.873 22.5286 450.71 44.5001 485C108.861 585.447 341.136 472.134 331 591C321.464 702.833 120.689 594.448 61.0001 689.5C-35.418 843.043 417 987.5 417 987.5\" stroke=\"#024970\" stroke-width=\"3\"/>\n</svg> */}\n\n\n\n// import React, { useEffect } from \"react\";\n// import gsap from \"gsap\";\n// import { ScrollTrigger } from \"gsap/ScrollTrigger\";\n// import { MotionPathPlugin } from \"gsap/MotionPathPlugin\";\n\n\n// gsap.registerPlugin(ScrollTrigger,MotionPathPlugin );\n\n// export const BezierAnimation = () => {\n//   useEffect(() => {\n//     const path = document.querySelector(\".theline\");\n//     const ball = document.querySelector(\".ball01\");\n\n//     if (!path || !ball ) return;\n\n//     const length = path.getTotalLength();\n\n//     gsap.set(path, {\n//       strokeDasharray: length,\n//       strokeDashoffset: length,\n//     });\n\n//     gsap.to(path, {\n//       strokeDashoffset: 0,\n//       ease: \"none\",\n//       scrollTrigger: {\n//         trigger: path,\n//         start: \"top bottom\", // Start when the top of the path reaches the bottom of the viewport\n//         end: \"bottom top\",   // End when the bottom of the path reaches the top of the viewport\n//         scrub: 2,            // Smooth scroll behavior\n//         markers: true,       // For debugging (remove in production)\n//       },\n//     });\n//     gsap.to(ball, {\n//         motionPath: {\n//           path: path,\n//           align: path,\n//           alignOrigin: [0.5, 0.5],\n//           autoRotate: true, // Ball rotates along path\n//         },\n//         ease: \"none\",\n//         scrollTrigger: {\n//           trigger: path,\n//           start: \"top top\",\n//           end: \"bottom bottom\",\n//           scrub: 2,\n//         },\n//       });\n//     //   gsap.to(\".ball01 , .text01\", {}, 0.84)\n\n//   }, []);\n\n//   return (\n//     <div className=\"flex items-center justify-center\">\n//       <svg  \n//            width=\"397\" height=\"3133\" viewBox=\"0 0 397 3133\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n//       >\n//         {/* <path className=\"theline\"\n//         d=\"M -5,0\n//         Q 450 230 300 450\n//         T 130 750\n//         Q 100 850 300 1000\n//         T 150 1200\n//         \"\n//         fill=\"none\" stroke=\"#024970\" strokeWidth={5}\n//         >\n//         </path> */}\n//         {/* <path className=\"theline\" d=\"M655 1C565.57 124.015 518.159 195.016 426 316C268.231 523.117 -18.9396 570.982 1.99992 830.5C24.696\n//          1111.79 481.882 996.229 583.5 1259.5C693.581 1544.7 234.096 1753.36 388 \n//          2017.5C565.055 2321.37 1059.51 2378.72 1284 2108C1639.83 1678.88 \n//          -299.063 1677.21 49.4999 2823.5C127.523 3080.09 655 3147.5 655 3147.5\" \n//          fill=\"none\" stroke=\"#024970\" strokeWidth={5}\n//          /> */}\n//         <path className=\"theline\" d=\"M117.154 2C137.156 2.02282 254.073 266.632 156.354 245.232C58.6352 223.832 208.456 -71.7949 226.32 96.1856C244.183 264.166 295.037 126.765 305.465 268.05C321.333 483.027 136.484 199.119 151.392 413.698C158.686 518.679 242.664 518.735 238.725 624.402C234.152 747.076 130.22 684.959 104.004 796.751C55.885 1001.95 366.245 923.337 340.448 1143.39C320.047 1317.42 144.024 1199.05 139.731 1377.4C136.626 1506.42 74.9092 1946.23 235.251 1650.25C395.594 1354.27 528.506 1973.96 149.407 2154.67C-229.692 2335.39 238.465 2118.13 269.49 2188.17C316.614 2294.57 164.037 2314.06 141.716 2447.91C104.873 2668.84 355.119 2787.4 284.128 2973.7C257.864 3042.62 161.894 3030.94 190.593 3096.04C205.845 3130.64 247.657 3131 247.657 3131\" \n//         fill=\"none\" stroke=\"#024970\" strokeWidth={5} />\n\n//         <circle className=\"ball01\" fill=\"#024970\" r=\"20\" cx=\"50\" cy=\"100\" ></circle>\n\n//       </svg>\n//     </div>\n//   );\n// };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}